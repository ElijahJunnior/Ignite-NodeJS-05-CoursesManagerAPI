# Nome do Workflow
name: AWS_EC2_WRKFLW

# Quando ele será executado
on: 
  # Será executado durante o push
  push:
  # Somente quando feito na branch MAIN
    branches: [main]

# Tarefas que deve ser executada
jobs:
  # Criando a tarefa BUILD
  build:
    # Dando nome a tarefa
    name: deploy on push to master
    # Informando qual o SISTEMA OPERACIONAL usado no JOB
    runs-on: ubuntu-latest
    
    # Uma lista das etapas que serão executadas pelo Workflow
    steps:
      # Criando uma etapa
      # Executando um action externo
      # O Action CHECKOUT faz o checkout de uma versão 
      # específica de um repositório
      - uses: actions/checkout@v2
      
      
      # Criando uma etapa
      - 
        # Definindo o nome da etapa
        name: Setup Node JS
        # Executando um action externo
        # O Action SETUP-NODE serve para definir a versão do 
        # node que o projeto usa
        uses: actions/setup-node@v2
        # Passando parâmetros para o Action
        with:
          # Passando qual versão do node usada no projeto
          node-version: 18.x
      
      # Criando uma etapa
      - 
        # Definindo o nome da etapa
        name: Install Dependecies
        # Executando um comando no shell da instancia
        run: yarn
          
      # Criando uma etapa
      -
        # Definindo o nome da etapa
        name: Build
        # Executando um comando no shell da instancia
        run: yarn build
        
      # Cria uma etapa
      # Essa etapa faz uso do SCP FILES para copiar os arquivos 
      # gerados pelo workflow para a instancia via SSH
      -
        # Executando um action externo
        # O APPLeBoy SCP FILES para copiar os arquivos gerados 
        # pelo workflow para a instancia via SSH
        uses: appleboy/scp-action@master
        # Passando parâmetros para o Action
        with: 
          # Passando variável criada na area secrets do Github
          # Ip público da instancia na AWS
          host: ${{ secrets.SSH_HOST }}
          # O usuário usado
          username: ${{ secrets.SSH_USER }}
          # A porta usada pelo SSH 
          port: ${{ secrets.SSH_PORT }}
          # Chave privada para autenticação
          key: ${{ secrets.SSH_KEY }}
          # Define arquivos devem ser copiados
          # Nesse exemplo o trecho . define que todos os arquivos 
          # devem ser copiados e o trecho !node_modules define que 
          # a pasta node_modules deve ser ignorada
          source: "., !node_modules"
          # Define qual deve ser o diretório de destino dentro da 
          # instancia que vai receber os arquivos
          target: "caminho raiz da sua aplicação. Ex.: ~/app/meu_app"
      # Essa etapa faz uso do Appleboy ssh-action para executar 
      # um script via SSH na instancia onde a aplicação está hospedada
      -
        name: Update api
        # Fazendo uso do action externo Appleboy SSH-Action
        uses: appleboy/ssh-action@master
        # Passando parâmetros para o action externo
        with: 
          # Passando variável criada na area secrets do Github
          # Ip da público da instancia na AWS
          host: ${{ secrets.SSH_HOST }}
          # O usuário usado
          username: ${{ secrets.SSH_USER }}
          # A porta usada pelo SSH 
          port: ${{ secrets.SSH_PORT }}
          # Chave privada para autenticação
          key: ${{ secrets.SSH_KEY }}
          # Passo um script para navegar até a raiz do projeto,
          # na instancia onde ele está hospedado,
          # executar o yarn para instalar os pacotes, 
          # rodar as migrations e reiniciar o pm2
          script: |
            cd [caminho raiz da sua aplicação]
            yarn
            yarn typeorm migration:run
            yarn pm2 restart [nome do processo da sua aplicacão]
